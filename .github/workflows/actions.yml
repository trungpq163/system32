name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v1
        with:
          node-version: '16.14.0'
      - name: NPM Installation
        run: |
          cd website
          npm install

      - name: Build
        run: |
          cd website
          npm run build

      # docker run -it --env-file=.env -e "CONFIG=$(cat ../config.json | jq -r tostring)" algolia/docsearch-scraper
      # Pull image algolia/docsearch-scraper docker
      # and then run the command
      - name: Run DocSearch
        run: |
          cd website
          docker run -it --env-file=.env -e "CONFIG={
  "index_name": "docusaurus-2",
  "start_urls": ["https://system32.vercel.app/"],
  "sitemap_urls": ["https://system32.vercel.app/sitemap.xml"],
  "sitemap_alternate_links": true,
  "stop_urls": ["/tests"],
  "selectors": {
    "lvl0": {
      "selector": "(//ul[contains(@class,'menu__list')]//a[contains(@class, 'menu__link menu__link--sublist menu__link--active')]/text() | //nav[contains(@class, 'navbar')]//a[contains(@class, 'navbar__link--active')]/text())[last()]",
      "type": "xpath",
      "global": true,
      "default_value": "Documentation"
    },
    "lvl1": "header h1",
    "lvl2": "article h2",
    "lvl3": "article h3",
    "lvl4": "article h4",
    "lvl5": "article h5, article td:first-child",
    "lvl6": "article h6",
    "text": "article p, article li, article td:last-child"
  },
  "strip_chars": " .,;:#",
  "custom_settings": {
    "separatorsToIndex": "_",
    "attributesForFaceting": ["language", "version", "type", "docusaurus_tag"],
    "attributesToRetrieve": [
      "hierarchy",
      "content",
      "anchor",
      "url",
      "url_without_anchor",
      "type"
    ]
  },
  "conversation_id": ["833762294"],
  "nb_hits": 46250
}" algolia/docsearch-scraper

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.14.0'
      - name: NPM Installation
        run: |
          cd website
          npm install

      - name: Build
        run: |
          cd website
          npm run build
